name: df-api-release-workflow

on: 
  push:
    branches: [main]
  pull_request:
    branches: [main]


jobs:
  test:
    env:
      CI: true
      MONGO_URI: mongodb://localhost/digitalfarmer
      JWT_SECRET: some_jwt_secret
    strategy:
      fail-fast: true
      matrix:
        node-version: [16.x,]
        mongodb-version: ['4.4']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{matrix.node-version}}
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.6.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}
      - run: npm install
      - run: npm test
  
  release:
    env:
      IMAGE_NAME: ${{secrets.DOCKER_USER}}/digital-farmer-api
      PROJECT_ID: ${{secrets.PROJECT_ID}}
      JWT_SECRET: ${{secrets.JWT_SECRET}}
      MONGO_URI: ${{secrets.MONGO_URI}}

    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - run: |
          echo JWT_SECRET=$JWT_SECRET >> .env
          echo MONGO_URI=$MONGO_URI >> .env

      - name: Semver
        id: versioning
        uses: paulhatch/semantic-version@v4.0.2
        with:
          branch: main
          tag_prefix: "v"
          major_pattern: "BREAKING CHANGE:"
          minor_pattern: "feat:"
          format: "v${major}.${minor}.${patch}"

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: df-api

      - name: Archive content
        uses: thedoctor0/zip-release@master
        with:
          filename: df-api.zip

      - name: Create release
        id: create_release
        if: ${{!startsWith(github.ref, 'refs/tags')}}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.github_token}}
        with:
          tag_name: ${{steps.versioning.outputs.version}}
          release_name: ${{steps.versioning.outputs.version}}
          prerelease: false

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.github_token}}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: ./df-api.zip
          asset_name: df-api-v${{steps.versioning.outputs.version}}.zip
          asset_content_type: application/zip

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@master
        with:
          service_acount_key: ${{secrets.SERVICE_ACCOUNT_KEY}}
          project_id: ${{env.PROJECT_ID}}
          export_default_credentials: true

      - name: Configure docker client
        run: |
          gcloud auth configure-docker --quiet

      - name: Push Image to gcr
        env:
          tag_name: ${{steps.versioning.outputs.version}}
        run: |
          docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
          docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:$tag_name

          docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
          docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:$tag_name
      


